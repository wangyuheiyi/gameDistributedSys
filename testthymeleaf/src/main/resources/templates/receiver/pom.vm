<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>$codeGroupId</groupId>
	<artifactId>$codeArtifactId</artifactId>
	<version>$codeVersion</version>
	<name>$objName</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<docker.image.prefix>$receiverDockerHost</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
   		 </dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<plugins>
			<!-- 跳过单元测试 --> 
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <configuration>
			        <skipTests>true</skipTests>
			    </configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--3：将Docker镜像push到DockerHub上-->
			<!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
			<plugin>
			    <groupId>com.spotify</groupId>
			    <artifactId>docker-maven-plugin</artifactId>
			    <configuration>
			    	<!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 --> 
					<!-- 详见：https://github.com/spotify/docker-maven-plugin Invalid repository name ... only [a-z0-9-_.] are allowed -->
					<!-- 如果要将docker镜像push到DockerHub上去的话，这边的路径要和repo路径一致 
					<dockerHost>http://$receiverDockerHost:2375</dockerHost>
					--> 
					<pushImage>true</pushImage>
					<imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
					<!-- 指定Dockerfile所在的路径 --> 
					<dockerDirectory>${basedir}/src/main/resources</dockerDirectory>
					<resources> 
						<resource> 
							<targetPath>/</targetPath> 
							<directory>${project.build.directory}</directory> 
							<include>${project.build.finalName}.jar</include> 
						</resource> 
					</resources> 
					<!-- 以下两行是为了docker push到DockerHub使用的。 -->
					<serverId>docker-hub</serverId> 
					<registryUrl>https://index.docker.io/v1/</registryUrl>  
			    </configuration>
			</plugin>
		</plugins>
	</build>

</project>
